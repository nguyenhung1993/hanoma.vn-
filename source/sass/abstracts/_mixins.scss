
// ======================================================
// Abstracts :: Mixins
// ======================================================

// Responsive
// We use Bootstrap's mixin breakpoint
// https://getbootstrap.com/docs/4.0/layout/overview/#responsive-breakpoints
//
// @include media-breakpoint-down(sm) {
//   code here
// }


/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
$breakpoints: (
  smallphone-and-up: '(max-width: 320px)',
  smallphone-and-down: '(max-width: 480px)',
  phone-and-down: '(max-width: 767px)',
  tablet-and-down: '(max-width: 991px)',
  small-desktop-and-down: '(max-width: 1024px)',
  desktop-and-down: '(max-width: 1199px)',
  large-desktop-and-down: '(max-width: 1350px)',
  tablet-and-up: '(min-width: 768px)',
  desktop-and-up: '(min-width: 992px)',
  large-desktop-and-up: '(min-width: 1200px)',
  tablet-and-desktop: '(min-width: 768px) and (max-width: 1199px)',
  phone-and-tablet: '(min-width: 768px) and (max-width: 991px)',
  smallphone-and-phone: '(min-width: 480px) and (max-width: 767px)',
  desktop-and-large-desktop: '(min-width: 992px) and (max-width: 1350px)',
);

@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media screen and #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
      + 'Please make sure it is defined in `$breakpoints` map.';
  }
}


/// Truncate text multiline
/// @param {string} $line-height - Line height of text
/// @param {number} $line-count - Number of line
/// @param {string} $bg-color - Background color of text
@mixin truncate-multiline($line-height: 1.2em, $line-count: 1, $bg-color: $mp-white) {
  overflow: hidden;
  position: relative;
  line-height: $line-height;
  max-height: $line-height * $line-count;
  text-align: justify;
  margin-right: -1em;
  padding-right: 1em;

  &:before {
    content: '...';
    position: absolute;
    right: 0;
    bottom: 0;
  }

  &:after {
    content: '';
    position: absolute;
    right: 0;
    width: 1em;
    height: 1em;
    margin-top: .2em;
    background: $bg-color;
  }
}

/// Mixin font family bold and fallback style bold
@mixin font-bold() {
  font-family: $font-family-primary-bold;
  font-weight: $font-weight-bold;
}

@mixin font-normal() {
  font-family: $font-family-primary;
  font-weight: $font-weight-normal;
}


@mixin align-vertical {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin align-indent {
  position: absolute;
  left: -9999px;
}
